{"id":"node_modules/algoliasearch-helper/src/functions/formatSort.js","dependencies":[{"name":"/Users/matthew.foyle/Desktop/flagship-demo.js/package.json","includedInParent":true,"mtime":1607012531292},{"name":"/Users/matthew.foyle/Desktop/flagship-demo.js/node_modules/algoliasearch-helper/package.json","includedInParent":true,"mtime":1607012162562},{"name":"./find","loc":{"line":3,"column":19},"parent":"/Users/matthew.foyle/Desktop/flagship-demo.js/node_modules/algoliasearch-helper/src/functions/formatSort.js","resolved":"/Users/matthew.foyle/Desktop/flagship-demo.js/node_modules/algoliasearch-helper/src/functions/find.js"}],"generated":{"js":"'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/algoliasearch-helper/src/functions/formatSort.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/algoliasearch-helper/src/functions/formatSort.js":"'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n"},"lineCount":39}},"error":null,"hash":"9709ef2fe06fce285d502d551ebe2478","cacheData":{"env":{}}}