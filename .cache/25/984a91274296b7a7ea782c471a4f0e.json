{"id":"Medz","dependencies":[{"name":"/Users/hugo.valla/Desktop/flagship_fashion_demo/package.json","includedInParent":true,"mtime":1608801534076},{"name":"/Users/hugo.valla/Desktop/flagship_fashion_demo/node_modules/@algolia/autocomplete-core/package.json","includedInParent":true,"mtime":1608730064887}],"generated":{"js":"\"use strict\";function e(){var e=-1,r=-1,t=void 0;return function(n){var o=++e;return Promise.resolve(n).then(function(e){return t&&o<r?t:(r=o,t=e,e)})}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createConcurrentSafePromise=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":7,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"createConcurrentSafePromise","original":{"line":7,"column":16},"generated":{"line":1,"column":22}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"basePromiseId","original":{"line":8,"column":6},"generated":{"line":1,"column":26}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"basePromiseId","original":{"line":8,"column":6},"generated":{"line":1,"column":30}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":23},"generated":{"line":1,"column":33}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedId","original":{"line":9,"column":6},"generated":{"line":1,"column":35}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":26},"generated":{"line":1,"column":38}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedValue","original":{"line":10,"column":6},"generated":{"line":1,"column":40}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"undefined","original":{"line":10,"column":28},"generated":{"line":1,"column":47}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":9},"generated":{"line":1,"column":49}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":9},"generated":{"line":1,"column":56}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"promise","original":{"line":11,"column":43},"generated":{"line":1,"column":65}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"currentPromiseId","original":{"line":13,"column":8},"generated":{"line":1,"column":68}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"currentPromiseId","original":{"line":13,"column":8},"generated":{"line":1,"column":72}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"basePromiseId","original":{"line":12,"column":4},"generated":{"line":1,"column":76}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"Promise","original":{"line":14,"column":11},"generated":{"line":1,"column":78}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"Promise","original":{"line":14,"column":11},"generated":{"line":1,"column":85}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"resolve","original":{"line":14,"column":19},"generated":{"line":1,"column":93}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"promise","original":{"line":14,"column":27},"generated":{"line":1,"column":101}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"then","original":{"line":14,"column":36},"generated":{"line":1,"column":104}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":41},"generated":{"line":1,"column":109}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"x","original":{"line":14,"column":51},"generated":{"line":1,"column":118}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedValue","original":{"line":28,"column":10},"generated":{"line":1,"column":121}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedValue","original":{"line":28,"column":10},"generated":{"line":1,"column":128}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"currentPromiseId","original":{"line":28,"column":33},"generated":{"line":1,"column":131}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedId","original":{"line":28,"column":52},"generated":{"line":1,"column":133}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedValue","original":{"line":29,"column":15},"generated":{"line":1,"column":135}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedId","original":{"line":32,"column":6},"generated":{"line":1,"column":138}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"currentPromiseId","original":{"line":32,"column":25},"generated":{"line":1,"column":140}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"latestResolvedValue","original":{"line":33,"column":6},"generated":{"line":1,"column":142}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"x","original":{"line":33,"column":28},"generated":{"line":1,"column":144}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","name":"x","original":{"line":34,"column":13},"generated":{"line":1,"column":146}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":152}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":159}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":174}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":182}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":195}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":196}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":203}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":207}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":215}},{"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1},"generated":{"line":1,"column":243}}],"sources":{"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js":"/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  var basePromiseId = -1;\n  var latestResolvedId = -1;\n  var latestResolvedValue = undefined;\n  return function runConcurrentSafePromise(promise) {\n    basePromiseId++;\n    var currentPromiseId = basePromiseId;\n    return Promise.resolve(promise).then(function (x) {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n      return x;\n    });\n  };\n}"},"lineCount":null}},"error":null,"hash":"1535e5534b7cef39cdb8a8bd7d11486e","cacheData":{"env":{}}}