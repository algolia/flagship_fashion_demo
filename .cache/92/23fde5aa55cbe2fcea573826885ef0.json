{"id":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","dependencies":[{"name":"/Users/hugo.valla/Desktop/flagship_fashion_demo/package.json","includedInParent":true,"mtime":1610385910552},{"name":"/Users/hugo.valla/Desktop/flagship_fashion_demo/node_modules/@algolia/autocomplete-core/package.json","includedInParent":true,"mtime":1608730064887}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConcurrentSafePromise = createConcurrentSafePromise;\n\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nfunction createConcurrentSafePromise() {\n  var basePromiseId = -1;\n  var latestResolvedId = -1;\n  var latestResolvedValue = undefined;\n  return function runConcurrentSafePromise(promise) {\n    basePromiseId++;\n    var currentPromiseId = basePromiseId;\n    return Promise.resolve(promise).then(function (x) {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n      return x;\n    });\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":7,"column":7}},{"name":"createConcurrentSafePromise","generated":{"line":14,"column":9},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":7,"column":16}},{"generated":{"line":14,"column":36},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":7,"column":7}},{"generated":{"line":14,"column":39},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":7,"column":46}},{"generated":{"line":15,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":2}},{"name":"basePromiseId","generated":{"line":15,"column":6},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":6}},{"generated":{"line":15,"column":19},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":19}},{"generated":{"line":15,"column":22},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":22}},{"generated":{"line":15,"column":23},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":23}},{"generated":{"line":15,"column":24},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":8,"column":2}},{"generated":{"line":16,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":2}},{"name":"latestResolvedId","generated":{"line":16,"column":6},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":6}},{"generated":{"line":16,"column":22},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":22}},{"generated":{"line":16,"column":25},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":25}},{"generated":{"line":16,"column":26},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":26}},{"generated":{"line":16,"column":27},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":9,"column":2}},{"generated":{"line":17,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":10,"column":2}},{"name":"latestResolvedValue","generated":{"line":17,"column":6},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":10,"column":6}},{"generated":{"line":17,"column":25},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":10,"column":25}},{"name":"undefined","generated":{"line":17,"column":28},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":10,"column":28}},{"generated":{"line":17,"column":37},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":10,"column":2}},{"generated":{"line":18,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":2}},{"generated":{"line":18,"column":9},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":9}},{"name":"runConcurrentSafePromise","generated":{"line":18,"column":18},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":18}},{"generated":{"line":18,"column":42},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":9}},{"name":"promise","generated":{"line":18,"column":43},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":43}},{"generated":{"line":18,"column":50},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":9}},{"generated":{"line":18,"column":52},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":52}},{"name":"basePromiseId","generated":{"line":19,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":12,"column":4}},{"name":"basePromiseId","generated":{"line":19,"column":4},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":12,"column":4}},{"generated":{"line":19,"column":17},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":12,"column":17}},{"generated":{"line":20,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":13,"column":4}},{"name":"currentPromiseId","generated":{"line":20,"column":8},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":13,"column":8}},{"generated":{"line":20,"column":24},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":13,"column":24}},{"name":"basePromiseId","generated":{"line":20,"column":27},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":13,"column":27}},{"generated":{"line":20,"column":40},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":13,"column":4}},{"generated":{"line":21,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":4}},{"name":"Promise","generated":{"line":21,"column":11},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":11}},{"generated":{"line":21,"column":18},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":18}},{"name":"resolve","generated":{"line":21,"column":19},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":19}},{"generated":{"line":21,"column":26},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":11}},{"name":"promise","generated":{"line":21,"column":27},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":27}},{"generated":{"line":21,"column":34},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":11}},{"name":"then","generated":{"line":21,"column":36},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":36}},{"generated":{"line":21,"column":40},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":11}},{"generated":{"line":21,"column":41},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":41}},{"name":"x","generated":{"line":21,"column":51},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":51}},{"generated":{"line":21,"column":52},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":41}},{"generated":{"line":21,"column":54},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":54}},{"generated":{"line":22,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":15,"column":6}},{"generated":{"line":23,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":16,"column":6}},{"generated":{"line":24,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":17,"column":6}},{"generated":{"line":25,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":18,"column":6}},{"generated":{"line":26,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":19,"column":6}},{"generated":{"line":27,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":20,"column":6}},{"generated":{"line":28,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":21,"column":6}},{"generated":{"line":29,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":22,"column":6}},{"generated":{"line":30,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":23,"column":6}},{"generated":{"line":31,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":24,"column":6}},{"generated":{"line":32,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":25,"column":6}},{"generated":{"line":33,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":26,"column":6}},{"generated":{"line":34,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":27,"column":6}},{"generated":{"line":35,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":6}},{"name":"latestResolvedValue","generated":{"line":35,"column":10},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":10}},{"generated":{"line":35,"column":29},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":29}},{"name":"currentPromiseId","generated":{"line":35,"column":33},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":33}},{"generated":{"line":35,"column":49},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":49}},{"name":"latestResolvedId","generated":{"line":35,"column":52},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":52}},{"generated":{"line":35,"column":68},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":6}},{"generated":{"line":35,"column":70},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":28,"column":70}},{"generated":{"line":36,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":29,"column":8}},{"name":"latestResolvedValue","generated":{"line":36,"column":15},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":29,"column":15}},{"generated":{"line":36,"column":34},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":29,"column":8}},{"generated":{"line":37,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":30,"column":7}},{"name":"latestResolvedId","generated":{"line":39,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":32,"column":6}},{"name":"latestResolvedId","generated":{"line":39,"column":6},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":32,"column":6}},{"generated":{"line":39,"column":22},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":32,"column":22}},{"name":"currentPromiseId","generated":{"line":39,"column":25},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":32,"column":25}},{"generated":{"line":39,"column":41},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":32,"column":6}},{"name":"latestResolvedValue","generated":{"line":40,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":33,"column":6}},{"name":"latestResolvedValue","generated":{"line":40,"column":6},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":33,"column":6}},{"generated":{"line":40,"column":25},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":33,"column":25}},{"name":"x","generated":{"line":40,"column":28},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":33,"column":28}},{"generated":{"line":40,"column":29},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":33,"column":6}},{"generated":{"line":41,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":34,"column":6}},{"name":"x","generated":{"line":41,"column":13},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":34,"column":13}},{"generated":{"line":41,"column":14},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":34,"column":6}},{"generated":{"line":42,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":35,"column":5}},{"generated":{"line":42,"column":5},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":11}},{"generated":{"line":42,"column":6},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":14,"column":4}},{"generated":{"line":43,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":36,"column":3}},{"generated":{"line":43,"column":3},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":11,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js","original":{"line":37,"column":1}}],"sources":{"node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js":"/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  var basePromiseId = -1;\n  var latestResolvedId = -1;\n  var latestResolvedValue = undefined;\n  return function runConcurrentSafePromise(promise) {\n    basePromiseId++;\n    var currentPromiseId = basePromiseId;\n    return Promise.resolve(promise).then(function (x) {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n      return x;\n    });\n  };\n}"},"lineCount":null}},"error":null,"hash":"18f7cc453780cdbde5d6cad12d89be6b","cacheData":{"env":{}}}