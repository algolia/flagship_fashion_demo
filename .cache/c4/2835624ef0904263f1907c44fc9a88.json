{"id":"eJYD","dependencies":[{"name":"/Users/hugo.valla/Desktop/flagship_fashion_demo/package.json","includedInParent":true,"mtime":1608730327572},{"name":"/Users/hugo.valla/Desktop/flagship_fashion_demo/node_modules/@algolia/autocomplete-js/package.json","includedInParent":true,"mtime":1608730064886}],"generated":{"js":"\"use strict\";function e(e){var t=e.template,r=e.element,n=e.parent;\"string\"==typeof t&&(r.innerHTML=t),n.appendChild(r)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.renderTemplate=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":9,"column":7},"generated":{"line":1,"column":13}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"renderTemplate","original":{"line":9,"column":16},"generated":{"line":1,"column":22}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"_ref","original":{"line":9,"column":31},"generated":{"line":1,"column":24}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"template","original":{"line":10,"column":6},"generated":{"line":1,"column":27}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"template","original":{"line":10,"column":6},"generated":{"line":1,"column":31}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"_ref","original":{"line":10,"column":17},"generated":{"line":1,"column":33}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"template","original":{"line":10,"column":22},"generated":{"line":1,"column":35}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"element","original":{"line":11,"column":6},"generated":{"line":1,"column":44}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"_ref","original":{"line":11,"column":16},"generated":{"line":1,"column":46}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"element","original":{"line":11,"column":21},"generated":{"line":1,"column":48}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"parent","original":{"line":12,"column":6},"generated":{"line":1,"column":56}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"_ref","original":{"line":12,"column":15},"generated":{"line":1,"column":58}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"parent","original":{"line":12,"column":20},"generated":{"line":1,"column":60}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":14,"column":26},"generated":{"line":1,"column":67}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"template","original":{"line":14,"column":13},"generated":{"line":1,"column":84}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"element","original":{"line":15,"column":4},"generated":{"line":1,"column":88}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"innerHTML","original":{"line":15,"column":12},"generated":{"line":1,"column":90}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"template","original":{"line":15,"column":24},"generated":{"line":1,"column":100}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"parent","original":{"line":18,"column":2},"generated":{"line":1,"column":103}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"appendChild","original":{"line":18,"column":9},"generated":{"line":1,"column":105}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","name":"element","original":{"line":18,"column":21},"generated":{"line":1,"column":117}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":120}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":127}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":142}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":150}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":163}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":164}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":171}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":175}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":183}},{"source":"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js","original":{"line":19,"column":1},"generated":{"line":1,"column":198}}],"sources":{"node_modules/@algolia/autocomplete-js/dist/esm/renderTemplate.js":"/**\n * Renders the template in the element and append the element to its parent.\n *\n * If the template is a string, we update the HTML of the root to this string.\n * If the template is empty, it means that users manipulated the root element\n * DOM programatically (e.g., attached events, used a renderer like Preact), so\n * we only add the element to its parent.\n */\nexport function renderTemplate(_ref) {\n  var template = _ref.template,\n      element = _ref.element,\n      parent = _ref.parent;\n\n  if (typeof template === 'string') {\n    element.innerHTML = template;\n  }\n\n  parent.appendChild(element);\n}"},"lineCount":null}},"error":null,"hash":"242fc7cbd4604a2dbf966cc0a29f9e45","cacheData":{"env":{}}}